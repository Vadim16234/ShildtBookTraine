package com.kruchinin_Vadim.javacore.chapter13.autoClose;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

/*
    В этой версии программы ShowFile оператор try с ресурсами применяется для
автоматического закрытия файла

    Примечание: для выполнения этого кода требуется версия JDK 7
 */
class ShowFile {
    public static void main(String[] args) {
        int i;

        // сначала убедимся, что имя файла указано
        if (args.length != 1) {
            System.out.println("Использование: ShowFile имя_файла");
            return;
        }

        // Ниже оператор try с ресурсами применяется сначала для открытия, а затем для автоматического
        // закрытия файла по завершении блока этого оператора
        try (FileInputStream fin = new FileInputStream(args[0])) {
            do {
                i = fin.read();
                if (i != -1) {
                    System.out.println((char) i);
                }
            } while (i != -1);
        } catch (FileNotFoundException e) {
            System.out.println("Файл не найден.");
        } catch (IOException e) {
            System.out.println("Произошла ошибка ввода/вывода");
        }
    }
}

/*
    Как видите, в той части оператора try, где указывается спецификация ресурса, объявляется экземпляр fin
класса FileInputStream, которому затем присваивается ссылка на файл, открытый его конструктором. Таким образом,
в данной версии программы переменная fin является локальной по отношению к блоку оператора try,
в начале которого она создается. По завершении блока try поток ввода-вывода, связанный с переменной fin,
автоматически закрывается в результате неявного вызова метода close (). Этот метод не нужно вызывать явно,
а следовательно, исключается возможность просто забыть закрыть файл. В этом и состоит главное преимущество
применения оператора try с ресурсами.

    Однако ресурс, объявляемый в операторе try, неявно считается завершенным. Это означает,
что присвоить ресурс после того, как он бьm создан, нельзя. Кроме того, область действия ресурса ограничивается
пределами оператора try с ресурсами.
 */
