package com.kruchinin_Vadim.javacore.chapter13.nativeMethod;

// Простой пример применения платформенно-ориентированного метода
public class NativeDemo {
    int i;
    public static void main(String[] args) {
        NativeDemo ob = new NativeDemo();

        ob.i = 10;
        System.out.println("Содержимое переменной ob.i перед вызовом платформенно-ориентированного метода: " + ob.i);
        ob.test(); // вызвать платформенно-ориентированный метод
        System.out.println("Содержимое переменной ob.i после вызова платформенно-ориентированного метода: " + ob.i);

    }

    // объявить платформенно-ориентированный метод
    public native void test();

    // загрузить библиотеку DLL, содержпщую статический метод
    static {
        System.loadLibrary("NativeDemo");
    }
}

/*
    Обратите внимание на то, что метод test() объявлен как native и не имеет тела. Это метод, который будет
реализован далее на языке С. Обратите также внимание на блок оператора static. Как пояснялось ранее, блок,
объявленный как static, выполняется только один раз при запуске программы, а точнее говоря, при первой загрузке
ее класса. В данном случае он служит для загрузки динамически подключаемой библиотеки,
которая содержит реализацию метода test().

Динамически подключаемая библиотека загружается методом loadLibrary(), входящим в состав класса System.
static void loadLibrary(String имя_файпа)
Здесь параметр имя_файла обозначает символьную строку, в которой задается имя файла, содержащего библиотеку.
 */
