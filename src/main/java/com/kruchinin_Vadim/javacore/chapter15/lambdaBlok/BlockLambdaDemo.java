package com.kruchinin_Vadim.javacore.chapter15.lambdaBlok;

// Блочное лямбда-выражение, вычисляющее факториал целочисленного значения
class BlockLambdaDemo {
    public static void main(String[] args) {
        // Это блочное лямбда-выражение вычисляет факториал целочисленного значения
        NumericFunc factorial = (n) -> {
            int result = 1;

            for (int i = 1; i <= n; i++) {
                result = i * result;
            }
            return result;
        };
        System.out.println("Факториал числа 3 равен " + factorial.func(3));
        System.out.println("Факториал числа 5 равен " + factorial.func(5));
    }
}
/*
    В данном примере программы обратите внимание на то, что в блочном лямбда-выражении объявляется переменная result,
организуется цикл for и указывается оператор return. Все эти действия вполне допустимы в теле блочного
лямбда-выражения. По существу, тело блока такого выражения аналогично телу метода. Следует также иметь в виду,
что когда в лямбда-выражении оказывается оператор return, он просто вызывает возврат из самого лямбда-выражения,
но не из объемлющего его метода.
 */
