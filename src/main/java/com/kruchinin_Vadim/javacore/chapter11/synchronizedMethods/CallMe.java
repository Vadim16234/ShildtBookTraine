package com.kruchinin_Vadim.javacore.chapter11.synchronizedMethods;

class CallMe {
    synchronized void call(String msg) { // попробкуй убрать ключевое слово synchronized
        System.out.print("[" + msg);
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            System.out.println("Прервано.");
        }
        System.out.println("]");
    }
}
/*
    Приведенная выше программа состоит из трех простых классов. Первый из них, Callme, содержит единственный
метод call(). Этот метод принимает параметр msg типа String и пытается вывести символьную строку msg в
квадратных скобках. Любопытно отметить, что после того, как метод call() выводит открывающую квадратную скобку
и символьную строку msg,он вызывает метод Thread.sleep(1ООО), который приостанавливает текущий поток исполнения
на одну секунду.
    Конструктор следующего класса, Caller, принимает ссылку на экземпляры классов CallMe и String, которые
сохраняются в переменных target и msg соответственно. В этом конструкторе создается также новый поток исполнения,
в котором вызывается метод run() для данного объекта. Этот поток запускается немедленно. В методе run() из
класса Caller вызывается метод call() для экземпляра target класса CallMe, передавая ему символьную строку msg.
И наконец, класс Synch начинается с создания единственного экземпляра класса CallMe и трех экземпляров класса Caller
с отдельными строками сообщения. Один и тот же экземпляр класса CallMe передается каждому конструктору Caller().
 */
