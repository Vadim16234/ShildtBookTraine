package com.kruchinin_Vadim.javacore.chapter11.theMainStream;

// Управление главным потоком исполнения
class CurrentThreadDemo {
    public static void main(String[] args) {
        Thread t = Thread.currentThread();

        System.out.println("Текущий поток исполнения " + t);

        // изменить имя потока исполнения
        t.setName("My Thread");
        System.out.println("После изменения имени потока " + t);

        try {
            for (int n = 5; n > 0; n--) {
                System.out.println(n);
                Thread.sleep(1000);
            }
        } catch (InterruptedException e) {
            System.out.println("Главный поток исполнения прерван");
        }
    }
}

/*
    В этом примере программы ссылка на текущий поток исполнения (в данном случае - главный поток) получается
в результате вызова метода currentThread() и сохраняется в локальной переменной t. Затем выводятся сведения о потоке
исполнения. Далее вызывается метод setName() для изменения внутреннего имени потока исполнения. После этого
сведения о потоке исполнения выводятся заново. А в следующем далее цикле выводятся цифры в обратном порядке с
задержкой на 1 секунду после каждой строки. Пауза организуется с помощью метода sleep(). Аргумент метода sleep()
задает время задержки в миллисекундах. Обратите внимание на блок операторов try/catch, в котором находится цикл.
Метод sleep() из класса Thread может сгенерировать исключение типа InterruptException, если в каком-нибудь другом
потоке исполнения потребуется прервать ожидающий поток.
 */
